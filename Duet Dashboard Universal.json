[
    {
        "id": "af9cf391.fd50a",
        "type": "tab",
        "label": "Duet Dashboard",
        "disabled": false,
        "info": ""
    },
    {
        "id": "85921641.1de008",
        "type": "ui_template",
        "z": "af9cf391.fd50a",
        "group": "c284f5ba.1ce698",
        "name": "Web Cam",
        "order": 4,
        "width": "7",
        "height": "4",
        "format": "<!DOCTYPE html>  \n<html>  \n    <head>  \n        <style> \n            .geeks { \n                width:100%; \n                height:100%px; \n            } \n            img { \n                width:100%; \n                height:100%; \n            } \n        </style> \n    </head>  \n    <body> \n        <div class = \"geeks\"> \n            <img src= \"{{(msg.payload)}}\"></img>\n        </div> \n    </body>  \n</html> \n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 300,
        "y": 555,
        "wires": [
            []
        ]
    },
    {
        "id": "3a212bb2.ae6824",
        "type": "ui_button",
        "z": "af9cf391.fd50a",
        "name": "EM STOP",
        "group": "c284f5ba.1ce698",
        "order": 6,
        "width": "5",
        "height": "1",
        "passthru": false,
        "label": "Emergency Stop",
        "tooltip": "",
        "color": "white",
        "bgcolor": "red",
        "icon": "fa-ban",
        "payload": "Stop Printing?",
        "payloadType": "str",
        "topic": "data",
        "x": 300,
        "y": 315,
        "wires": [
            [
                "431b378.0170ec8"
            ]
        ]
    },
    {
        "id": "431b378.0170ec8",
        "type": "ui_toast",
        "z": "af9cf391.fd50a",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "STOP",
        "cancel": "CANCEL",
        "raw": false,
        "topic": "Emergency Stop",
        "name": "CONFIRM",
        "x": 520,
        "y": 315,
        "wires": [
            [
                "6847d56b.d9b88c"
            ]
        ]
    },
    {
        "id": "e54d57b6.d65398",
        "type": "switch",
        "z": "af9cf391.fd50a",
        "name": "STOP / CANCEL",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "STOP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CANCEL",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 270,
        "y": 1280,
        "wires": [
            [
                "3196606e.a15a8"
            ],
            []
        ]
    },
    {
        "id": "f99d2e31.c9d7b",
        "type": "change",
        "z": "af9cf391.fd50a",
        "name": "Set G Code",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "M112",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 1325,
        "wires": [
            [
                "34ee0c51.4808f4"
            ]
        ]
    },
    {
        "id": "34ee0c51.4808f4",
        "type": "http request",
        "z": "af9cf391.fd50a",
        "name": "EMSTOP",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "body",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1380,
        "y": 1325,
        "wires": [
            [
                "b292969f.c71348"
            ]
        ]
    },
    {
        "id": "3d34b1e1.52b5ae",
        "type": "debug",
        "z": "af9cf391.fd50a",
        "name": "em",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2015,
        "y": 1280,
        "wires": []
    },
    {
        "id": "b888b562.eb8fa8",
        "type": "ui_gauge",
        "z": "af9cf391.fd50a",
        "name": "Tool Temp",
        "group": "c284f5ba.1ce698",
        "order": 1,
        "width": "3",
        "height": "2",
        "gtype": "gage",
        "title": "{{msg.label}}",
        "label": "celsius",
        "format": "{{value}}",
        "min": "50",
        "max": "300",
        "colors": [
            "#0080c0",
            "#00ff00",
            "#ca3838"
        ],
        "seg1": "160",
        "seg2": "285",
        "x": 310,
        "y": 375,
        "wires": []
    },
    {
        "id": "2d283551.fbbe0a",
        "type": "ui_gauge",
        "z": "af9cf391.fd50a",
        "name": "Bed Temp",
        "group": "c284f5ba.1ce698",
        "order": 3,
        "width": "3",
        "height": "2",
        "gtype": "gage",
        "title": "{{msg.label}}",
        "label": "celsius",
        "format": "{{value}}",
        "min": "50",
        "max": "110",
        "colors": [
            "#0080c0",
            "#00ff00",
            "#ca3838"
        ],
        "seg1": "50",
        "seg2": "85",
        "x": 300,
        "y": 495,
        "wires": []
    },
    {
        "id": "7e1ea05f.ce0fc",
        "type": "ui_text",
        "z": "af9cf391.fd50a",
        "group": "c284f5ba.1ce698",
        "order": 2,
        "width": "1",
        "height": "2",
        "name": "FAN",
        "label": "FAN",
        "format": "{{msg.payload}}%",
        "layout": "col-center",
        "x": 290,
        "y": 435,
        "wires": []
    },
    {
        "id": "e2a77ef9.63614",
        "type": "link in",
        "z": "af9cf391.fd50a",
        "name": "Tool Gage In",
        "links": [
            "fae7aca7.e9a86",
            "bc5adfcc.2b642",
            "3f558e8d.3c78c2",
            "91e9d103.8e0bb"
        ],
        "x": 165,
        "y": 375,
        "wires": [
            [
                "b888b562.eb8fa8"
            ]
        ]
    },
    {
        "id": "f666dcd5.c8314",
        "type": "link in",
        "z": "af9cf391.fd50a",
        "name": "Fan Speed In",
        "links": [
            "34017d00.bdd544",
            "bbb521fc.36f16",
            "ff8e0e91.cd031",
            "abf72364.16af6"
        ],
        "x": 165,
        "y": 435,
        "wires": [
            [
                "7e1ea05f.ce0fc"
            ]
        ]
    },
    {
        "id": "ee3127f5.f2edd8",
        "type": "link in",
        "z": "af9cf391.fd50a",
        "name": "Bed Gage In",
        "links": [
            "987b7b53.3f87d8",
            "fa168e69.15d0a",
            "122e4ff2.c3b77",
            "8bffac0f.4baa5"
        ],
        "x": 165,
        "y": 495,
        "wires": [
            [
                "2d283551.fbbe0a"
            ]
        ]
    },
    {
        "id": "33d79c57.ccff24",
        "type": "link in",
        "z": "af9cf391.fd50a",
        "name": "Web Cam In",
        "links": [
            "56433905.0178a8"
        ],
        "x": 165,
        "y": 555,
        "wires": [
            [
                "85921641.1de008"
            ]
        ]
    },
    {
        "id": "6847d56b.d9b88c",
        "type": "link out",
        "z": "af9cf391.fd50a",
        "name": "EM Stop Out",
        "links": [
            "1eb44e8b.29a071"
        ],
        "x": 720,
        "y": 315,
        "wires": []
    },
    {
        "id": "1eb44e8b.29a071",
        "type": "link in",
        "z": "af9cf391.fd50a",
        "name": "EM Stop In",
        "links": [
            "6847d56b.d9b88c"
        ],
        "x": 105,
        "y": 1280,
        "wires": [
            [
                "e54d57b6.d65398"
            ]
        ]
    },
    {
        "id": "160764c2.d3814b",
        "type": "comment",
        "z": "af9cf391.fd50a",
        "name": "Dashboard Gui - Readme",
        "info": "You must assign each of these nodes to a dashboard tab/group in the Dashboard configuration screen",
        "x": 260,
        "y": 240,
        "wires": []
    },
    {
        "id": "a4cc2959.594268",
        "type": "comment",
        "z": "af9cf391.fd50a",
        "name": "Emergency Stop Nodes",
        "info": "",
        "x": 190,
        "y": 1220,
        "wires": []
    },
    {
        "id": "70a4a785.6ec1f8",
        "type": "inject",
        "z": "af9cf391.fd50a",
        "name": "SET WEBCAM ADDRESS IN HERE",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "http://10.66.1.52:8081",
        "payloadType": "str",
        "x": 325,
        "y": 60,
        "wires": [
            [
                "56433905.0178a8"
            ]
        ]
    },
    {
        "id": "56433905.0178a8",
        "type": "link out",
        "z": "af9cf391.fd50a",
        "name": "Web Cam Addr Out",
        "links": [
            "33d79c57.ccff24"
        ],
        "x": 780,
        "y": 60,
        "wires": []
    },
    {
        "id": "cebfbdd0.e1a0a",
        "type": "inject",
        "z": "af9cf391.fd50a",
        "name": "SET PRINTER IP ADDRESS IN HERE",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.4",
        "topic": "",
        "payload": "10.66.1.52",
        "payloadType": "str",
        "x": 326,
        "y": 150,
        "wires": [
            [
                "19a39632.8d1bea"
            ]
        ]
    },
    {
        "id": "cfcf74ae.97a8e8",
        "type": "link out",
        "z": "af9cf391.fd50a",
        "name": "",
        "links": [
            "b4d07884.eec4c8"
        ],
        "x": 780,
        "y": 150,
        "wires": []
    },
    {
        "id": "19a39632.8d1bea",
        "type": "function",
        "z": "af9cf391.fd50a",
        "name": "Set 3D Printer IP",
        "func": "msg.DuetIP = msg.payload;\nflow.set(\"DuetIP\", msg.payload);\nflow.set(\"LastDuetStatus\", false);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 615,
        "y": 150,
        "wires": [
            [
                "cfcf74ae.97a8e8"
            ]
        ]
    },
    {
        "id": "66e87361.a30d1c",
        "type": "inject",
        "z": "af9cf391.fd50a",
        "name": "Ping Duet",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "15",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1090,
        "y": 120,
        "wires": [
            [
                "26403b17.e375a4"
            ]
        ]
    },
    {
        "id": "25220ab5.ae7ea6",
        "type": "comment",
        "z": "af9cf391.fd50a",
        "name": "Set the flow variables",
        "info": "",
        "x": 625,
        "y": 105,
        "wires": []
    },
    {
        "id": "88e6bd96.d0e49",
        "type": "conf ping",
        "z": "af9cf391.fd50a",
        "name": "Ping Duet Printer",
        "host": "",
        "timeout": "5",
        "requests": "1",
        "x": 1620,
        "y": 120,
        "wires": [
            [
                "1bb25030.ceb1e",
                "2a075f0a.19164"
            ]
        ]
    },
    {
        "id": "26403b17.e375a4",
        "type": "function",
        "z": "af9cf391.fd50a",
        "name": "Get DuetIP",
        "func": "msg.host = flow.get(\"DuetIP\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1360,
        "y": 120,
        "wires": [
            [
                "88e6bd96.d0e49"
            ]
        ]
    },
    {
        "id": "2a075f0a.19164",
        "type": "debug",
        "z": "af9cf391.fd50a",
        "name": "Ping Results",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1615,
        "y": 60,
        "wires": []
    },
    {
        "id": "1bb25030.ceb1e",
        "type": "switch",
        "z": "af9cf391.fd50a",
        "name": "Is Online?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1860,
        "y": 120,
        "wires": [
            [
                "142523fb.748c8c"
            ],
            [
                "f2d35f86.d9bd9"
            ]
        ]
    },
    {
        "id": "f2d35f86.d9bd9",
        "type": "function",
        "z": "af9cf391.fd50a",
        "name": "Set Duet Status True",
        "func": "flow.set(\"DuetLive\", true);\nmsg.payload = true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2125,
        "y": 150,
        "wires": [
            [
                "ae7eabd.62c8f58",
                "8e9d866b.4d4d68"
            ]
        ]
    },
    {
        "id": "142523fb.748c8c",
        "type": "function",
        "z": "af9cf391.fd50a",
        "name": "Set Duet Status False",
        "func": "flow.set(\"DuetLive\", false);\nmsg.payload = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2125,
        "y": 90,
        "wires": [
            [
                "ae7eabd.62c8f58",
                "8e9d866b.4d4d68"
            ]
        ]
    },
    {
        "id": "40f43b4c.c37454",
        "type": "comment",
        "z": "af9cf391.fd50a",
        "name": "STEP 1 : Check Duet is live on LAN and set flow var",
        "info": "",
        "x": 1180,
        "y": 60,
        "wires": []
    },
    {
        "id": "ae7eabd.62c8f58",
        "type": "link out",
        "z": "af9cf391.fd50a",
        "name": "Online Status Out",
        "links": [
            "e70e1b5a.54d128"
        ],
        "x": 2290,
        "y": 120,
        "wires": []
    },
    {
        "id": "e70e1b5a.54d128",
        "type": "link in",
        "z": "af9cf391.fd50a",
        "name": "Start Updates",
        "links": [
            "ae7eabd.62c8f58"
        ],
        "x": 1005,
        "y": 270,
        "wires": [
            [
                "c599217.d3457e"
            ]
        ]
    },
    {
        "id": "4e84f947.8c77d8",
        "type": "switch",
        "z": "af9cf391.fd50a",
        "name": "Start ?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1375,
        "y": 270,
        "wires": [
            [
                "fafd5493.6b0068"
            ],
            [
                "94f4bd1c.1d5bf"
            ]
        ]
    },
    {
        "id": "fdcb0aa8.85adb8",
        "type": "link out",
        "z": "af9cf391.fd50a",
        "name": "Stop Updating",
        "links": [
            "31d8fc99.4d72b4"
        ],
        "x": 1700,
        "y": 225,
        "wires": []
    },
    {
        "id": "fafd5493.6b0068",
        "type": "change",
        "z": "af9cf391.fd50a",
        "name": "STOP",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "STOP",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1530,
        "y": 225,
        "wires": [
            [
                "fdcb0aa8.85adb8"
            ]
        ]
    },
    {
        "id": "c599217.d3457e",
        "type": "function",
        "z": "af9cf391.fd50a",
        "name": "Check for Status Change",
        "func": "//this function filters the flow to only run on a status change.\nvar LastStatus = flow.get(\"LastDuetStatus\");\n//check if LastStatus has been set before\nif(LastStatus === undefined) {\n    flow.set(\"LastDuetStatus\", msg.payload);\n    return msg;\n} else {\n    //check if status has changed since last ping of device\n    if (LastStatus != msg.payload) {\n        flow.set(\"LastDuetStatus\", msg.payload);\n        return msg;\n    }\n}\n//if LastStatus has not changed then no msg will be passed",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1165,
        "y": 270,
        "wires": [
            [
                "4e84f947.8c77d8",
                "34942f9b.2dc4e"
            ]
        ]
    },
    {
        "id": "15740bc8.8bf814",
        "type": "link out",
        "z": "af9cf391.fd50a",
        "name": "Start Updates Out",
        "links": [
            "4abd4d3b.b01754"
        ],
        "x": 1700,
        "y": 315,
        "wires": []
    },
    {
        "id": "94f4bd1c.1d5bf",
        "type": "function",
        "z": "af9cf391.fd50a",
        "name": "Get Printer IP",
        "func": "msg.DuetIP = flow.get(\"DuetIP\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1555,
        "y": 315,
        "wires": [
            [
                "15740bc8.8bf814"
            ]
        ]
    },
    {
        "id": "4334f186.24da8",
        "type": "comment",
        "z": "af9cf391.fd50a",
        "name": "STEP 2 : Conditional check to start / stop updates to dashboard",
        "info": "",
        "x": 1225,
        "y": 210,
        "wires": []
    },
    {
        "id": "4abd4d3b.b01754",
        "type": "link in",
        "z": "af9cf391.fd50a",
        "name": "Check API Type IN",
        "links": [
            "15740bc8.8bf814"
        ],
        "x": 1005,
        "y": 465,
        "wires": [
            [
                "7e0bad54.208824"
            ]
        ]
    },
    {
        "id": "2680e65e.ec3b7a",
        "type": "comment",
        "z": "af9cf391.fd50a",
        "name": "STEP 3 : Check which API version is needed",
        "info": "",
        "x": 1165,
        "y": 405,
        "wires": []
    },
    {
        "id": "f144693b.02a428",
        "type": "http request",
        "z": "af9cf391.fd50a",
        "name": "GET DUET STATUS",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1410,
        "y": 465,
        "wires": [
            [
                "b37ea813.3b3ad8",
                "473abf91.a33dc"
            ]
        ]
    },
    {
        "id": "7e0bad54.208824",
        "type": "function",
        "z": "af9cf391.fd50a",
        "name": "Generate URL",
        "func": "msg.url = \"http://\" + msg.DuetIP + \"/rr_status?type=2\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1160,
        "y": 465,
        "wires": [
            [
                "f144693b.02a428"
            ]
        ]
    },
    {
        "id": "473abf91.a33dc",
        "type": "debug",
        "z": "af9cf391.fd50a",
        "name": "Check API Response",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1705,
        "y": 375,
        "wires": []
    },
    {
        "id": "76c17ea0.6a202",
        "type": "inject",
        "z": "af9cf391.fd50a",
        "name": "Set True",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1860,
        "y": 180,
        "wires": [
            [
                "f2d35f86.d9bd9"
            ]
        ]
    },
    {
        "id": "8f64017d.b04d2",
        "type": "inject",
        "z": "af9cf391.fd50a",
        "name": "Set False",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1860,
        "y": 60,
        "wires": [
            [
                "142523fb.748c8c"
            ]
        ]
    },
    {
        "id": "34942f9b.2dc4e",
        "type": "debug",
        "z": "af9cf391.fd50a",
        "name": "Status Change",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1355,
        "y": 330,
        "wires": []
    },
    {
        "id": "8e9d866b.4d4d68",
        "type": "debug",
        "z": "af9cf391.fd50a",
        "name": "is live",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2465,
        "y": 120,
        "wires": []
    },
    {
        "id": "b37ea813.3b3ad8",
        "type": "switch",
        "z": "af9cf391.fd50a",
        "name": "API Type",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "404",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1655,
        "y": 465,
        "wires": [
            [
                "9ee9a546.764218"
            ],
            [
                "2f224806.3b8528"
            ]
        ]
    },
    {
        "id": "9ee9a546.764218",
        "type": "function",
        "z": "af9cf391.fd50a",
        "name": "Set API Type 2",
        "func": "flow.set(\"DuetAPIVersion\", 2)\nmsg.DuetAPIVer = 2\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1855,
        "y": 420,
        "wires": [
            [
                "65f251a9.0dd5b"
            ]
        ]
    },
    {
        "id": "2f224806.3b8528",
        "type": "function",
        "z": "af9cf391.fd50a",
        "name": "Set API Type 1",
        "func": "flow.set(\"DuetAPIVersion\", 1)\nmsg.DuetAPIVer = 1\nreturn msg;\n\n//1 is old 2 is new",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1855,
        "y": 495,
        "wires": [
            [
                "6d44364f.bad0e8"
            ]
        ]
    },
    {
        "id": "65f251a9.0dd5b",
        "type": "function",
        "z": "af9cf391.fd50a",
        "name": "Set API Type 2 Paths",
        "func": "//T0 paths\n\nflow.set (\"CurrToolTempPath\", \"msg.payload.result.heat.heaters[1].current\");\nflow.set (\"ActiveToolTempPath\", \"msg.payload.result.heat.heaters[1].active\");\nflow.set (\"StandbyToolTempPath\", \"msg.payload.result.heat.heaters[1].standby\");\nflow.set (\"MaxToolTempPath\", \"msg.payload.result.heat.heaters[1].max\");\nflow.set (\"ToolStatusPath\", \"msg.payload.result.heat.heaters[1].state\");\n\n//Bed paths\nflow.set (\"CurrBedTempPath\", \"msg.payload.result.heat.heaters[0].current\");\nflow.set (\"ActiveBedTempPath\", \"msg.payload.result.heat.heaters[0].active\");\nflow.set (\"StandbyBedTempPath\", \"msg.payload.result.heat.heaters[0].standby\");\nflow.set (\"MaxBedTempPath\", \"msg.payload.result.heat.heaters[0].max\");\nflow.set (\"BedStatusPath\", \"msg.payload.result.heat.heaters[0].state\");\n\n//Fan paths\nflow.set (\"FanSpeedPath\", \"msg.payload.result.fans[0].actualValue\");\n\n//remaining job time paths\nflow.set (\"JobTimesLeftFilePath\", \"msg.payload.job.timesLeft.file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2130,
        "y": 420,
        "wires": [
            [
                "139fe237.3f633e"
            ]
        ]
    },
    {
        "id": "6d44364f.bad0e8",
        "type": "function",
        "z": "af9cf391.fd50a",
        "name": "Set API Type 1 Paths",
        "func": "//T0 paths\n\nflow.set (\"CurrToolTempPath\", \"msg.payload.temps.current[1]\");\nflow.set (\"ActiveToolTempPath\", \"msg.payload.temps.tools.active[0][0]\");\nflow.set (\"StandbyToolTempPath\", \"msg.payload.temps.tools.standby[0][0]\");\nflow.set (\"MaxToolTempPath\", \"msg.payload.tempLimit\");\nflow.set (\"ToolStatusPath\", \"msg.payload.temps.state[1]\");\n\n//Bed paths\nflow.set (\"CurrBedTempPath\", \"msg.payload.temps.current[0]\");\nflow.set (\"ActiveBedTempPath\", \"msg.payload.temps.bed.active\");\nflow.set (\"StandbyBedTempPath\", \"msg.payload.temps.bed.standby\");\nflow.set (\"BedStatusPath\", \"msg.payload.temps.bed.state\");\n\n//Fan paths\nflow.set (\"FanSpeedPath\", \"msg.payload.params.fanPercent[0]\");\n\n//remaining job time paths\nflow.set (\"JobTimesLeftFilePath\", \"msg.payload.timesLeft.file\");\n\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2130,
        "y": 495,
        "wires": [
            [
                "139fe237.3f633e"
            ]
        ]
    },
    {
        "id": "139fe237.3f633e",
        "type": "link out",
        "z": "af9cf391.fd50a",
        "name": "",
        "links": [
            "59bb584f.67ab58"
        ],
        "x": 2615,
        "y": 460,
        "wires": []
    },
    {
        "id": "59bb584f.67ab58",
        "type": "link in",
        "z": "af9cf391.fd50a",
        "name": "",
        "links": [
            "139fe237.3f633e"
        ],
        "x": 295,
        "y": 740,
        "wires": [
            [
                "81109996.e6fd38"
            ]
        ]
    },
    {
        "id": "81109996.e6fd38",
        "type": "function",
        "z": "af9cf391.fd50a",
        "name": "Generate URL for API Version",
        "func": "if (msg.DuetAPIVer == 1){\n    msg.url1 = \"http://\" + msg.DuetIP + \"/rr_status?type=1\";\n    msg.url2 = \"http://\" + msg.DuetIP + \"/rr_status?type=2\";\n    msg.url3 = \"http://\" + msg.DuetIP + \"/rr_status?type=3\";\n    msg.url = \"http://\" + msg.DuetIP + \"/rr_status?type=2\";\n    \n} else {\n    msg.url = \"http://\" + msg.DuetIP + \"/machine/status\";\n}\nmsg.requestTimeout = 4000;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 740,
        "wires": [
            [
                "ea1a2065.79017"
            ]
        ]
    },
    {
        "id": "ea1a2065.79017",
        "type": "http request",
        "z": "af9cf391.fd50a",
        "name": "GET DUET STATUS",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 785,
        "y": 740,
        "wires": [
            [
                "430f9050.c728a",
                "cbf0cee4.656ce",
                "d382c900.3f27d8",
                "1129f7b5.7d1d48"
            ]
        ]
    },
    {
        "id": "430f9050.c728a",
        "type": "function",
        "z": "af9cf391.fd50a",
        "name": "Set Tool Gage Initial Parameters",
        "func": "var CurrToolTemp = eval(flow.get(\"CurrToolTempPath\"));\nvar ActiveToolTemp = eval(flow.get(\"ActiveToolTempPath\"));\nvar StandbyToolTemp = eval(flow.get(\"StandbyToolTempPath\"));\nvar MaxToolTemp = eval(flow.get(\"MaxToolTempPath\"));\nvar ToolStatus = eval(flow.get(\"ToolStatusPath\"));\n\nif (ToolStatus == \"active\" || ToolStatus == 2) {\n    TargToolTemp = ActiveToolTemp;\n    msg.label = \"T0: active > \" + TargToolTemp;\n}\n\nif (ToolStatus == \"standby\" || ToolStatus == 1) {\n    TargToolTemp = StandbyToolTemp;\n    msg.label = \"T0: standby > \" + TargToolTemp;\n}\n\n\nif (ToolStatus == \"off\" || ToolStatus === 0) {\n    TargToolTemp = 0;\n    msg.label = \"T0: off\";\n} \n\nmsg.ui_control = {min:0,\n                max:Math.round(MaxToolTemp),\n                seg1:139,\n                seg2:(Math.round(MaxToolTemp) - 15),\n                colors:[\"blue\",\"green\",\"red\"],\n                gtype:\"gage\"};\n\nmsg.payload = Math.round(CurrToolTemp);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1100,
        "y": 605,
        "wires": [
            [
                "fae7aca7.e9a86"
            ]
        ]
    },
    {
        "id": "fae7aca7.e9a86",
        "type": "link out",
        "z": "af9cf391.fd50a",
        "name": "",
        "links": [
            "e2a77ef9.63614"
        ],
        "x": 1300,
        "y": 605,
        "wires": []
    },
    {
        "id": "cbf0cee4.656ce",
        "type": "function",
        "z": "af9cf391.fd50a",
        "name": "Set Bed Gage Initial Parameters",
        "func": "var CurrToolTemp = eval(flow.get(\"CurrBedTempPath\"));\nvar ActiveToolTemp = eval(flow.get(\"ActiveBedTempPath\"));\nvar StandbyToolTemp = eval(flow.get(\"StandbyBedTempPath\"));\nvar MaxToolTemp;\nvar ToolStatus = eval(flow.get(\"BedStatusPath\"));\n\n//V1 of API does not pass back a max bed temp value so set it to 120\nif (msg.DuetAPIVer == 1){\n    MaxToolTemp = 120\n} else {\n    MaxToolTemp = eval(flow.get(\"MaxBedTempPath\"));\n}\n\nif (ToolStatus == \"active\" || ToolStatus == 2) {\n    TargToolTemp = ActiveToolTemp;\n    msg.label = \"BED: active > \" + TargToolTemp;\n}\n\nif (ToolStatus == \"standby\" || ToolStatus == 1) {\n    TargToolTemp = StandbyToolTemp;\n    msg.label = \"BED: standby > \" + TargToolTemp;\n}\n\n\nif (ToolStatus == \"off\" || ToolStatus === 0) {\n    TargToolTemp = 0;\n    msg.label = \"BED: off\";\n} \n\nmsg.ui_control = {min:0,\n                max:Math.round(MaxToolTemp),\n                seg1:49,\n                seg2:(Math.round(MaxToolTemp) - 5),\n                colors:[\"blue\",\"green\",\"red\"],\n                gtype:\"gage\"};\n\nmsg.payload = Math.round(CurrToolTemp);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1100,
        "y": 650,
        "wires": [
            [
                "987b7b53.3f87d8"
            ]
        ]
    },
    {
        "id": "987b7b53.3f87d8",
        "type": "link out",
        "z": "af9cf391.fd50a",
        "name": "",
        "links": [
            "ee3127f5.f2edd8"
        ],
        "x": 1300,
        "y": 650,
        "wires": []
    },
    {
        "id": "d382c900.3f27d8",
        "type": "function",
        "z": "af9cf391.fd50a",
        "name": "Set Initial Fan Speed",
        "func": "var FanSpeed = eval(flow.get(\"FanSpeedPath\"));\n\nif (FanSpeed >= 0.01){\n    //API v1 returns a value between 0-100 API v2 returns a value between .01-1\n    //so we need to normalise the values \n    if (msg.DuetAPIVer == 2) {\n        msg.payload = FanSpeed * 100;\n    } else {\n        msg.payload = FanSpeed;\n    }\n} else {msg.payload = 0;}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1070,
        "y": 695,
        "wires": [
            [
                "34017d00.bdd544"
            ]
        ]
    },
    {
        "id": "34017d00.bdd544",
        "type": "link out",
        "z": "af9cf391.fd50a",
        "name": "",
        "links": [
            "f666dcd5.c8314"
        ],
        "x": 1300,
        "y": 695,
        "wires": []
    },
    {
        "id": "49e61b5d.81d4b4",
        "type": "delay",
        "z": "af9cf391.fd50a",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1210,
        "y": 740,
        "wires": [
            [
                "a64256e3.e312a8"
            ]
        ]
    },
    {
        "id": "31d8fc99.4d72b4",
        "type": "link in",
        "z": "af9cf391.fd50a",
        "name": "",
        "links": [
            "fdcb0aa8.85adb8"
        ],
        "x": 1255,
        "y": 780,
        "wires": [
            [
                "a64256e3.e312a8"
            ]
        ]
    },
    {
        "id": "f527c91a.3cfdc8",
        "type": "function",
        "z": "af9cf391.fd50a",
        "name": "Set Fan Speed",
        "func": "var FanSpeed = eval(flow.get(\"FanSpeedPath\"));\n\nif (FanSpeed >= 0.01){\n    //API v1 returns a value between 0-100 API v2 returns a value between .01-1\n    //so we need to normalise the values \n    if (msg.DuetAPIVer == 2) {\n        msg.payload = FanSpeed * 100;\n    } else {\n        msg.payload = FanSpeed;\n    }\n} else {msg.payload = 0;}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1980,
        "y": 1040,
        "wires": [
            [
                "bbb521fc.36f16"
            ]
        ]
    },
    {
        "id": "2b62e9e0.101946",
        "type": "function",
        "z": "af9cf391.fd50a",
        "name": "Set Bed Gage Values",
        "func": "var CurrToolTemp = eval(flow.get(\"CurrBedTempPath\"));\nvar ActiveToolTemp = eval(flow.get(\"ActiveBedTempPath\"));\nvar StandbyToolTemp = eval(flow.get(\"StandbyBedTempPath\"));\nvar MaxToolTemp;\nvar ToolStatus = eval(flow.get(\"BedStatusPath\"));\n\n//V1 of API does not pass back a max bed temp value so set it to 120\nif (msg.DuetAPIVer == 1){\n    MaxToolTemp = 120\n} else {\n    MaxToolTemp = eval(flow.get(\"MaxToolBedPath\"));\n}\n\nif (ToolStatus == \"active\" || ToolStatus == 2) {\n    TargToolTemp = ActiveToolTemp;\n    msg.label = \"BED: active > \" + TargToolTemp;\n}\n\nif (ToolStatus == \"standby\" || ToolStatus == 1) {\n    TargToolTemp = StandbyToolTemp;\n    msg.label = \"BED: standby > \" + TargToolTemp;\n}\n\n\nif (ToolStatus == \"off\" || ToolStatus === 0) {\n    TargToolTemp = 0;\n    msg.label = \"BED: off\";\n} \n\nmsg.payload = Math.round(CurrToolTemp);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2000,
        "y": 1000,
        "wires": [
            [
                "fa168e69.15d0a"
            ]
        ]
    },
    {
        "id": "72cbc559.aa499c",
        "type": "function",
        "z": "af9cf391.fd50a",
        "name": "Set Tool Gage Values",
        "func": "var CurrToolTemp = eval(flow.get(\"CurrToolTempPath\"));\nvar ActiveToolTemp = eval(flow.get(\"ActiveToolTempPath\"));\nvar StandbyToolTemp = eval(flow.get(\"StandbyToolTempPath\"));\nvar MaxToolTemp = eval(flow.get(\"MaxToolTempPath\"));\nvar ToolStatus = eval(flow.get(\"ToolStatusPath\"));\n\nif (ToolStatus == \"active\" || ToolStatus == 2) {\n    TargToolTemp = ActiveToolTemp;\n    msg.label = \"T0: active > \" + TargToolTemp;\n}\n\nif (ToolStatus == \"standby\" || ToolStatus == 1) {\n    TargToolTemp = StandbyToolTemp;\n    msg.label = \"T0: standby > \" + TargToolTemp;\n}\n\n\nif (ToolStatus == \"off\" || ToolStatus === 0) {\n    TargToolTemp = 0;\n    msg.label = \"T0: off\";\n} \n\nmsg.payload = Math.round(CurrToolTemp);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2000,
        "y": 960,
        "wires": [
            [
                "bc5adfcc.2b642"
            ]
        ]
    },
    {
        "id": "bc5adfcc.2b642",
        "type": "link out",
        "z": "af9cf391.fd50a",
        "name": "",
        "links": [
            "e2a77ef9.63614"
        ],
        "x": 2235,
        "y": 960,
        "wires": []
    },
    {
        "id": "fa168e69.15d0a",
        "type": "link out",
        "z": "af9cf391.fd50a",
        "name": "",
        "links": [
            "ee3127f5.f2edd8"
        ],
        "x": 2235,
        "y": 1000,
        "wires": []
    },
    {
        "id": "bbb521fc.36f16",
        "type": "link out",
        "z": "af9cf391.fd50a",
        "name": "",
        "links": [
            "f666dcd5.c8314"
        ],
        "x": 2235,
        "y": 1040,
        "wires": []
    },
    {
        "id": "36921a4a.3899c6",
        "type": "comment",
        "z": "af9cf391.fd50a",
        "name": "Set the gauge ranges (only once)",
        "info": "",
        "x": 1100,
        "y": 560,
        "wires": []
    },
    {
        "id": "f6d11474.238568",
        "type": "http request",
        "z": "af9cf391.fd50a",
        "name": "GET DUET STATUS",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 480,
        "y": 1000,
        "wires": [
            [
                "504a6c5e.f3df34"
            ]
        ]
    },
    {
        "id": "e2577a44.45d148",
        "type": "debug",
        "z": "af9cf391.fd50a",
        "name": "Full Duet Status Query Response",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 1080,
        "wires": []
    },
    {
        "id": "764226c6.1242e8",
        "type": "comment",
        "z": "af9cf391.fd50a",
        "name": "Main Dashboard Set Parameters nodes",
        "info": "",
        "x": 430,
        "y": 695,
        "wires": []
    },
    {
        "id": "11dc610c.8112cf",
        "type": "switch",
        "z": "af9cf391.fd50a",
        "name": "API Version Check",
        "property": "DuetAPIVer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 750,
        "y": 1280,
        "wires": [
            [
                "952fa5b9.b47908"
            ],
            [
                "9250be3f.54eec"
            ]
        ]
    },
    {
        "id": "56f88c63.76f834",
        "type": "comment",
        "z": "af9cf391.fd50a",
        "name": "Set the duet response paths for the values needed",
        "info": "",
        "x": 2215,
        "y": 375,
        "wires": []
    },
    {
        "id": "dbdbeb3a.226fb8",
        "type": "comment",
        "z": "af9cf391.fd50a",
        "name": "Add more values by adding paths (Readme)",
        "info": "By activating \"Full Duet Status Query Response\" debug node you will get access to the full return from duet. Here you can work out the paths you need for the values you want to get from the Duet.\n\nAdding these paths to the \"Set API Type x Paths\" function node(s) will allow you to add more items to the dashboard.\n\n",
        "x": 2195,
        "y": 540,
        "wires": []
    },
    {
        "id": "9250be3f.54eec",
        "type": "function",
        "z": "af9cf391.fd50a",
        "name": "Generate URL",
        "func": "msg.url = \"http://\" + msg.DuetIP + \"/machine/code/\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 965,
        "y": 1325,
        "wires": [
            [
                "f99d2e31.c9d7b"
            ]
        ]
    },
    {
        "id": "952fa5b9.b47908",
        "type": "function",
        "z": "af9cf391.fd50a",
        "name": "Generate URL",
        "func": "msg.url = \"http://\" + msg.DuetIP + \"/rr_gcode?gcode=M112\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 965,
        "y": 1235,
        "wires": [
            [
                "f13d96ab.16c4b8"
            ]
        ]
    },
    {
        "id": "3196606e.a15a8",
        "type": "function",
        "z": "af9cf391.fd50a",
        "name": "Get Printer & Flow Values",
        "func": "msg.DuetAPIVer = flow.get(\"DuetAPIVersion\");\nmsg.DuetIP = flow.get(\"DuetIP\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 515,
        "y": 1280,
        "wires": [
            [
                "11dc610c.8112cf"
            ]
        ]
    },
    {
        "id": "f13d96ab.16c4b8",
        "type": "change",
        "z": "af9cf391.fd50a",
        "name": "Set G Code",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "M112",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 1235,
        "wires": [
            [
                "b9af36f2.4f9178"
            ]
        ]
    },
    {
        "id": "b9af36f2.4f9178",
        "type": "http request",
        "z": "af9cf391.fd50a",
        "name": "EMSTOP",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1380,
        "y": 1235,
        "wires": [
            [
                "b292969f.c71348"
            ]
        ]
    },
    {
        "id": "44810c18.e28f34",
        "type": "function",
        "z": "af9cf391.fd50a",
        "name": "Set Status False",
        "func": "flow.set(\"DuetLive\", false);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1820,
        "y": 1280,
        "wires": [
            [
                "3d34b1e1.52b5ae"
            ]
        ]
    },
    {
        "id": "b292969f.c71348",
        "type": "delay",
        "z": "af9cf391.fd50a",
        "name": "",
        "pauseType": "delay",
        "timeout": "15",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1620,
        "y": 1280,
        "wires": [
            [
                "44810c18.e28f34"
            ]
        ]
    },
    {
        "id": "65140126.aaad",
        "type": "comment",
        "z": "af9cf391.fd50a",
        "name": "Mitigation against status updates stopping",
        "info": "",
        "x": 1730,
        "y": 1235,
        "wires": []
    },
    {
        "id": "a64256e3.e312a8",
        "type": "looptimer2",
        "z": "af9cf391.fd50a",
        "duration": "5",
        "units": "Second",
        "maxloops": "10000",
        "maxtimeout": "96",
        "maxtimeoutunits": "Hour",
        "name": "",
        "x": 1425,
        "y": 740,
        "wires": [
            [
                "6d2ce75d.887548",
                "a8d4dcd.a5dec2"
            ],
            [
                "6d2ce75d.887548"
            ]
        ]
    },
    {
        "id": "6d2ce75d.887548",
        "type": "debug",
        "z": "af9cf391.fd50a",
        "name": "Loop Check",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1630,
        "y": 680,
        "wires": []
    },
    {
        "id": "1129f7b5.7d1d48",
        "type": "change",
        "z": "af9cf391.fd50a",
        "name": "Clear Status",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 740,
        "wires": [
            [
                "49e61b5d.81d4b4"
            ]
        ]
    },
    {
        "id": "bc39ee15.80a2f",
        "type": "function",
        "z": "af9cf391.fd50a",
        "name": "Get Job Remaining Time",
        "func": "var JobTime = eval(flow.get(\"JobTimesLeftFilePath\"));\n\nif (typeof JobTime == 'undefined' || JobTime === null) {JobTime = 0;}\n\n\nfunction secondsToHms(d) {\n    if (d === 0) {return \"00:00:00\";}\n    d = Number(d);\n    var h = Math.floor(d / 3600);\n    var m = Math.floor(d % 3600 / 60);\n    var s = Math.floor(d % 3600 % 60);\n\n    var hDisplay = h > 0 ? h + (h == 1 ? \" hour, \" : \" hours, \") : \"\";\n    var mDisplay = m > 0 ? m + (m == 1 ? \" minute, \" : \" minutes, \") : \"\";\n    var sDisplay = s > 0 ? s + (s == 1 ? \" second\" : \" seconds\") : \"\";\n    return hDisplay + mDisplay + sDisplay; \n}\n\nmsg.payload = \"Remaining Time: \" + secondsToHms(JobTime);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2010,
        "y": 1080,
        "wires": [
            [
                "b4bce984.f32f78"
            ]
        ]
    },
    {
        "id": "b4bce984.f32f78",
        "type": "switch",
        "z": "af9cf391.fd50a",
        "name": "No Current Job Filter",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Remaining Time: 00:00:00",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2260,
        "y": 1080,
        "wires": [
            [],
            [
                "6773fcd2.c41b54"
            ]
        ]
    },
    {
        "id": "6773fcd2.c41b54",
        "type": "debug",
        "z": "af9cf391.fd50a",
        "name": "Current Job Message",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2500,
        "y": 1080,
        "wires": []
    },
    {
        "id": "10bcfb7e.c78445",
        "type": "function",
        "z": "af9cf391.fd50a",
        "name": "Set API Type 2 Paths (Alternative Beta Firmware Paths)",
        "func": "//T0 paths\n\nflow.set (\"CurrToolTempPath\", \"msg.payload.heat.heaters[1].current\");\nflow.set (\"ActiveToolTempPath\", \"msg.payload.heat.heaters[1].active\");\nflow.set (\"StandbyToolTempPath\", \"msg.payload.heat.heaters[1].standby\");\nflow.set (\"MaxToolTempPath\", \"msg.payload.heat.heaters[1].max\");\nflow.set (\"ToolStatusPath\", \"msg.payload.heat.heaters[1].state\");\n\n//Bed paths\nflow.set (\"CurrBedTempPath\", \"msg.payload.heat.heaters[0].current\");\nflow.set (\"ActiveBedTempPath\", \"msg.payload.heat.heaters[0].active\");\nflow.set (\"StandbyBedTempPath\", \"msg.payload.heat.heaters[0].standby\");\nflow.set (\"MaxBedTempPath\", \"msg.payload.heat.heaters[0].max\");\nflow.set (\"BedStatusPath\", \"msg.payload.heat.heaters[0].state\");\n\n//Fan paths\nflow.set (\"FanSpeedPath\", \"msg.payload.fans[0].actualValue\");\n\n//remaining job time paths\nflow.set (\"JobTimesLeftFilePath\", \"msg.payload.job.timesLeft.file\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2250,
        "y": 320,
        "wires": [
            [
                "139fe237.3f633e"
            ]
        ]
    },
    {
        "id": "a8d4dcd.a5dec2",
        "type": "switch",
        "z": "af9cf391.fd50a",
        "name": "API Type",
        "property": "DuetAPIVer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1620,
        "y": 740,
        "wires": [
            [
                "cb97723c.b6d4f"
            ],
            [
                "8e59028.4ea5a"
            ]
        ]
    },
    {
        "id": "572a3798.340778",
        "type": "function",
        "z": "af9cf391.fd50a",
        "name": "Data Set 1",
        "func": "msg.url = msg.url1\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 270,
        "y": 940,
        "wires": [
            [
                "e8cc4a28.da5e98",
                "f6d11474.238568"
            ]
        ]
    },
    {
        "id": "92d674ba.15d558",
        "type": "link in",
        "z": "af9cf391.fd50a",
        "name": "",
        "links": [
            "f5a5bb1e.492c28",
            "4f92b160.b80ba"
        ],
        "x": 1835,
        "y": 960,
        "wires": [
            [
                "72cbc559.aa499c"
            ]
        ]
    },
    {
        "id": "9ca7220a.3e673",
        "type": "link in",
        "z": "af9cf391.fd50a",
        "name": "",
        "links": [
            "f5a5bb1e.492c28",
            "4f92b160.b80ba"
        ],
        "x": 1835,
        "y": 1000,
        "wires": [
            [
                "2b62e9e0.101946"
            ]
        ]
    },
    {
        "id": "66cb4cd2.0d6fa4",
        "type": "link in",
        "z": "af9cf391.fd50a",
        "name": "",
        "links": [
            "f5a5bb1e.492c28",
            "4a2d3ca0.4b6984"
        ],
        "x": 1835,
        "y": 1080,
        "wires": [
            [
                "bc39ee15.80a2f"
            ]
        ]
    },
    {
        "id": "5d6de00.6fc532",
        "type": "link in",
        "z": "af9cf391.fd50a",
        "name": "",
        "links": [
            "f5a5bb1e.492c28",
            "4f92b160.b80ba"
        ],
        "x": 1835,
        "y": 1040,
        "wires": [
            [
                "f527c91a.3cfdc8"
            ]
        ]
    },
    {
        "id": "80d953f5.66fba",
        "type": "function",
        "z": "af9cf391.fd50a",
        "name": "Data Set 2",
        "func": "msg.url = msg.url2\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 610,
        "y": 940,
        "wires": [
            [
                "be57fad5.87ca18",
                "e27e450f.efb078"
            ]
        ]
    },
    {
        "id": "690f226e.cdbd9c",
        "type": "function",
        "z": "af9cf391.fd50a",
        "name": "Data Set 3",
        "func": "msg.url = msg.url3\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 950,
        "y": 940,
        "wires": [
            [
                "1558633e.5f475d"
            ]
        ]
    },
    {
        "id": "e8cc4a28.da5e98",
        "type": "delay",
        "z": "af9cf391.fd50a",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 440,
        "y": 940,
        "wires": [
            [
                "80d953f5.66fba"
            ]
        ]
    },
    {
        "id": "be57fad5.87ca18",
        "type": "delay",
        "z": "af9cf391.fd50a",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 780,
        "y": 940,
        "wires": [
            [
                "690f226e.cdbd9c"
            ]
        ]
    },
    {
        "id": "504a6c5e.f3df34",
        "type": "link out",
        "z": "af9cf391.fd50a",
        "name": "",
        "links": [
            "a9fd122d.f9cd2"
        ],
        "x": 635,
        "y": 1000,
        "wires": []
    },
    {
        "id": "4f92b160.b80ba",
        "type": "link out",
        "z": "af9cf391.fd50a",
        "name": "",
        "links": [
            "92d674ba.15d558",
            "9ca7220a.3e673",
            "5d6de00.6fc532",
            "a9fd122d.f9cd2"
        ],
        "x": 975,
        "y": 1000,
        "wires": []
    },
    {
        "id": "4a2d3ca0.4b6984",
        "type": "link out",
        "z": "af9cf391.fd50a",
        "name": "",
        "links": [
            "a9fd122d.f9cd2",
            "66cb4cd2.0d6fa4"
        ],
        "x": 1315,
        "y": 1000,
        "wires": []
    },
    {
        "id": "fcc33d3f.f9846",
        "type": "link in",
        "z": "af9cf391.fd50a",
        "name": "",
        "links": [
            "cb97723c.b6d4f"
        ],
        "x": 115,
        "y": 940,
        "wires": [
            [
                "572a3798.340778"
            ]
        ]
    },
    {
        "id": "cb97723c.b6d4f",
        "type": "link out",
        "z": "af9cf391.fd50a",
        "name": "",
        "links": [
            "fcc33d3f.f9846"
        ],
        "x": 1755,
        "y": 700,
        "wires": []
    },
    {
        "id": "e27e450f.efb078",
        "type": "http request",
        "z": "af9cf391.fd50a",
        "name": "GET DUET STATUS",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 820,
        "y": 1000,
        "wires": [
            [
                "4f92b160.b80ba"
            ]
        ]
    },
    {
        "id": "1558633e.5f475d",
        "type": "http request",
        "z": "af9cf391.fd50a",
        "name": "GET DUET STATUS",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1160,
        "y": 1000,
        "wires": [
            [
                "4a2d3ca0.4b6984"
            ]
        ]
    },
    {
        "id": "d357984f.f4bd28",
        "type": "comment",
        "z": "af9cf391.fd50a",
        "name": "Get Data Sets for API Type 1",
        "info": "Uses three call as this older API uses different request urls to fetch different sets of data",
        "x": 220,
        "y": 900,
        "wires": []
    },
    {
        "id": "bbbdfe01.62fb",
        "type": "comment",
        "z": "af9cf391.fd50a",
        "name": "Main Dashboard Status Update nodes",
        "info": "",
        "x": 1970,
        "y": 900,
        "wires": []
    },
    {
        "id": "a9fd122d.f9cd2",
        "type": "link in",
        "z": "af9cf391.fd50a",
        "name": "",
        "links": [
            "f5a5bb1e.492c28",
            "504a6c5e.f3df34",
            "4f92b160.b80ba",
            "4a2d3ca0.4b6984"
        ],
        "x": 995,
        "y": 1080,
        "wires": [
            [
                "e2577a44.45d148"
            ]
        ]
    },
    {
        "id": "703bdefa.15764",
        "type": "http request",
        "z": "af9cf391.fd50a",
        "name": "GET DUET STATUS",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 300,
        "y": 1080,
        "wires": [
            [
                "f5a5bb1e.492c28"
            ]
        ]
    },
    {
        "id": "f5a5bb1e.492c28",
        "type": "link out",
        "z": "af9cf391.fd50a",
        "name": "",
        "links": [
            "92d674ba.15d558",
            "9ca7220a.3e673",
            "5d6de00.6fc532",
            "66cb4cd2.0d6fa4",
            "a9fd122d.f9cd2"
        ],
        "x": 455,
        "y": 1080,
        "wires": []
    },
    {
        "id": "19fa6766.7b7d99",
        "type": "comment",
        "z": "af9cf391.fd50a",
        "name": "Get Data Sets for API Type 2",
        "info": "Uses three call as this older API uses different request urls to fetch different sets of data",
        "x": 220,
        "y": 1040,
        "wires": []
    },
    {
        "id": "12a34330.fa659d",
        "type": "link in",
        "z": "af9cf391.fd50a",
        "name": "",
        "links": [
            "8e59028.4ea5a"
        ],
        "x": 115,
        "y": 1080,
        "wires": [
            [
                "703bdefa.15764"
            ]
        ]
    },
    {
        "id": "8e59028.4ea5a",
        "type": "link out",
        "z": "af9cf391.fd50a",
        "name": "",
        "links": [
            "12a34330.fa659d"
        ],
        "x": 1755,
        "y": 780,
        "wires": []
    },
    {
        "id": "9c15eda4.479ce",
        "type": "comment",
        "z": "af9cf391.fd50a",
        "name": "API 1 Data Set 1 Not currently used in this flow",
        "info": "Included for completeness",
        "x": 1240,
        "y": 940,
        "wires": []
    },
    {
        "id": "a6842937.5fee08",
        "type": "inject",
        "z": "af9cf391.fd50a",
        "name": "Manually Stop Update Checks",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1120,
        "y": 820,
        "wires": [
            [
                "a64256e3.e312a8"
            ]
        ]
    },
    {
        "id": "32bbafce.77862",
        "type": "comment",
        "z": "af9cf391.fd50a",
        "name": "Use these paths for API 2 if using the 3.1+ Betas",
        "info": "",
        "x": 2220,
        "y": 280,
        "wires": []
    },
    {
        "id": "c284f5ba.1ce698",
        "type": "ui_group",
        "z": "",
        "name": "3DP 2 Status",
        "tab": "712fac99.add4d4",
        "order": 1,
        "disp": true,
        "width": "7",
        "collapse": true
    },
    {
        "id": "712fac99.add4d4",
        "type": "ui_tab",
        "z": "",
        "name": "Duet Dashboard",
        "icon": "dashboard",
        "order": 26,
        "disabled": false,
        "hidden": false
    }
]
